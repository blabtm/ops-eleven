- name: Uninstall conflicting packages
  ansible.builtin.apt:
    pkg:
      - runc
      - containerd
      - podman-docker
      - docker-compose
      - docker-doc
      - docker.io
    state: absent

- name: Install requirements
  ansible.builtin.apt:
    pkg:
      - ca-certificates
      - curl
      - gnupg-agent
    state: latest

- name: Install Docker's official GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present

- name: Add Docker's APT repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable
    state: present

- name: Install Engine
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: latest

- name: Grant persmissions
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Configure daemon
  ansible.builtin.template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json

- name: Restart
  ansible.builtin.systemd:
    name: docker
    state: restarted
    enabled: true

- name: Recognize the Swarm state
  ansible.builtin.shell: 
    cmd: "docker info --format {% raw %}'{{ .Swarm.LocalNodeState }}'{% endraw %}"
  register: state

- name: Recognize the Swarm role
  ansible.builtin.shell:
    cmd: "docker info --format {% raw %}'{{ .Swarm.ControlAvailable }}'{% endraw %}"
  register: manager
  when: state.stdout != 'inactive'
